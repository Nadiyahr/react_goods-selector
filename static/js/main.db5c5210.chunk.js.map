{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","App","state","selected","handleSelect","good","setState","prevState","includes","cancelSelect","splice","indexOf","addItemsToTitle","title","length","slice","join","pop","clearSelect","this","className","type","cn","App__hiden","onClick","map","Component","ReactDOM","render","document","getElementById"],"mappings":"4PAIMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAOIC,E,4MACJC,MAAQ,CACNC,SAAU,CAAC,Q,EAGbC,aAAe,SAACC,GACd,EAAKC,UAAS,SAACC,GACb,OAAIA,EAAUJ,SAASK,SAASH,GACvBE,EAGF,CACLJ,SAAS,GAAD,mBAAMI,EAAUJ,UAAhB,CAA0BE,S,EAKxCI,aAAe,SAACJ,GACd,EAAKC,UAAS,SAACC,GAGb,OAFAA,EAAUJ,SAASO,OAAOH,EAAUJ,SAASQ,QAAQN,GAAO,GAErD,CACLF,SAAUI,EAAUJ,c,EAK1BS,gBAAkB,SAACT,GACjB,IAAIU,EAAQ,GAEZ,QAAQ,GACN,KAA0B,IAApBV,EAASW,OACbD,GAAK,UAAOV,EAAP,gBACL,MAEF,KAAMA,EAASW,OAAS,EACtBD,GAAK,UAAOV,EAASY,MAAM,GAAI,GAAGC,KAAK,MAAlC,gBAA+Cb,EAASY,QAAQE,MAAhE,gBACL,MAEF,QACEJ,GAAS,oBAIb,OAAOA,G,EAGTK,YAAc,WACZ,EAAKZ,UAAS,iBAAO,CACnBH,SAAU,Q,4CAId,WAAU,IAAD,OACCA,EAAagB,KAAKjB,MAAlBC,SAER,OACE,sBAAKiB,UAAU,MAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAG,CACZC,WAAgC,IAApBpB,EAASW,SAEvBU,QAASL,KAAKD,YALhB,eASA,oBAAIE,UAAU,aAAd,SACGD,KAAKP,gBAAgBT,KAExB,6BACGH,EAAgByB,KAAI,SAAApB,GAAI,OACvB,qBAEEe,UAAU,YAFZ,UAIE,sBAAMA,UAAS,oBAAejB,EAASK,SAASH,IAAS,qBAAzD,SACGA,IAEH,qBAAKe,UAAU,WAAf,SACE,wBACEC,KAAK,SACLG,QAAS,WACP,OAAOrB,EAASK,SAASH,GACrB,EAAKI,aAAaJ,GAClB,EAAKD,aAAaC,IAL1B,SAQGF,EAASK,SAASH,GAAQ,SAAW,eAfrCA,e,GAzEDqB,aAmGHzB,ICrHf0B,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.db5c5210.chunk.js","sourcesContent":["import { Component } from 'react';\nimport cn from 'classnames';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\ntype State = {\n  selected: string[];\n};\n\nclass App extends Component<{}, State> {\n  state = {\n    selected: ['Jam'],\n  };\n\n  handleSelect = (good: string) => {\n    this.setState((prevState) => {\n      if (prevState.selected.includes(good)) {\n        return prevState;\n      }\n\n      return {\n        selected: [...prevState.selected, good],\n      };\n    });\n  };\n\n  cancelSelect = (good: string) => {\n    this.setState((prevState) => {\n      prevState.selected.splice(prevState.selected.indexOf(good), 1);\n\n      return {\n        selected: prevState.selected,\n      };\n    });\n  };\n\n  addItemsToTitle = (selected: string[]) => {\n    let title = '';\n\n    switch (true) {\n      case (selected.length === 1):\n        title += `${selected} is selected`;\n        break;\n\n      case (selected.length > 1):\n        title += `${selected.slice(0, -1).join(', ')} and ${selected.slice().pop()} is selected`;\n        break;\n\n      default:\n        title += 'No goods selected';\n        break;\n    }\n\n    return title;\n  };\n\n  clearSelect = () => {\n    this.setState(() => ({\n      selected: [],\n    }));\n  };\n\n  render() {\n    const { selected } = this.state;\n\n    return (\n      <div className=\"App\">\n        <button\n          type=\"button\"\n          className={cn({\n            App__hiden: selected.length === 0,\n          })}\n          onClick={this.clearSelect}\n        >\n          X\n        </button>\n        <h1 className=\"App__title\">\n          {this.addItemsToTitle(selected)}\n        </h1>\n        <ul>\n          {goodsFromServer.map(good => (\n            <li\n              key={good}\n              className=\"App__item\"\n            >\n              <span className={`App__span ${selected.includes(good) && 'App__span--active'}`}>\n                {good}\n              </span>\n              <div className=\"App__btn\">\n                <button\n                  type=\"button\"\n                  onClick={() => {\n                    return selected.includes(good)\n                      ? this.cancelSelect(good)\n                      : this.handleSelect(good);\n                  }}\n                >\n                  {selected.includes(good) ? 'Cancel' : 'Select'}\n                </button>\n              </div>\n            </li>\n          ))}\n        </ul>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}